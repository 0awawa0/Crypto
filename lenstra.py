from Curve import Curve
import mathbase
import random
from datetime import datetime


def factorial(n):
	k = 1
	for i in range(2, n + 1):
		k *= i
	return k


def factor(n, bound=100, timeout=None):

	start = datetime.now()
	curvesCount = 0
	k = 1
	for prime in mathbase.SMALL_PRIMES[:bound]:
		k *= prime

	T = None
	while 1:
		curvesCount += 1
		if timeout and (datetime.now() - start).seconds > timeout: return None

		a = random.randint(2, n - 1)
		b = random.randint(2, n - 1)
		A = random.randint(2, n - 1)

		B = (pow(b, 2, n) - pow(a, 3, n) - A * a) % n
		g = mathbase.gcd(4 * pow(A, 3) + 27 * pow(B, 2), n)
		if g > 1 and g < n: return g

		curve = Curve(A, B, n)
		P = curve.point(a, b)
		if curve.hasSingularPoints(): continue
		print(curvesCount)

		for i in range(2, bound):
			Q = i * P
			if type(Q) is int:
				if Q < n:
					return Q
				break
			P = Q

		bound += 1

n = 3702857137434162273575656694030740755026382807076425224018217833985667196983945821519263643217145050073748343627540836723000613549679901887947908917603033193375104449090558102400042609105095157872113628603348263120483985505989796620872709582196773159241553683536216259626468998017183080647118094772531622100273
n = 136156466696636041012849616346824688485844580735105808185036225134637291975185862694772895869631638969670184399207677576855261248601738200555579123964881719977515400451350868290477255453449084531143504800306809826898786693606921947758766202115380210815680430542796283892787155284829365690395068193013395217219609
n = 65788079156361615396790851604451351854493072913639556082845537766009354295098917727704175605677043728906481313282308571259498888751937902153912540268233386733680304261902020225624058425392336294848097919525339355137849260317621050819857514492412985725949486604222216806248049004749840221228132167163004467906293111
n = 95884152637403303460465597585741929462065347809063976203599212884344981064699525894854594176804326393461328223685612472679677776827416610775480142171071501052804221900762016484904928198099178577700772004169600432780030083293336250640163481060264501925827383008576692229855649889081972270572264278411117951381553199789
print(factor(n, bound=1000, timeout=600))